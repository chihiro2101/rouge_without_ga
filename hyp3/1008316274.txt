this made i/o on the machine slower as the bus alternated between address and data modes , and more expensive to implement as the devices had to latch inputs over multiple cycles the idea was that a system would have one or more of the low-cost pics performing the actual i/o with the devices , and then sending that data to the cpu at the same time plessey in the uk released nmos processors numbered pic1650 and pic1655 based on the gi design , using the same instruction sets , either user mask programmable or versions pre-programed for auto-diallers and keyboard interfaces ) and program memory from 256 words to 64k words and more ( a '' word '' is one assembly language instruction , varying in length from 8 to 16 bits , depending on the specific pic micro family ) it is generally thought that pic stands for peripheral interface controller , although general instruments ' original acronym for the initial pic1640 and pic1650 devices was '' programmable interface controller '' if banked ram is used , the high 16 registers ( 0x70–0x7f ) are global , as are a few of the most important special-purpose registers , including the status register which holds the ram bank select bits ( the other global registers are fsr and indf , the low 8 bits of the program counter pcl , the pc high preload register pclath , and the master interrupt control register intcon ) the pclath register supplies high-order instruction address bits when the 8 bits supplied by a write to the pcl register , or the 11 bits supplied by a goto or call instruction , is not sufficient to address the available rom space the 17 series introduced a number of important new features : a memory mapped accumulator read access to code memory ( table reads ) direct register to register moves ( prior cores needed to move registers through the accumulator ) an external program memory interface to expand the code space an 8-bit × 8-bit hardware multiplier a second indirect register pair auto-increment/decrement addressing controlled by control bits in a status register ( alusta ) a significant limitation was that ram space was limited to 256 bytes ( 26 bytes of special function registers , and 232 bytes of general-purpose ram ) , with awkward bank-switching in the models that supported more the 18 series inherits most of the features and instructions of the 17 series , while adding a number of important new features : call stack is 21 bits wide and much deeper ( 31 levels deep ) the call stack may be read and written ( tosu : tosh : tosl registers ) conditional branch instructions indexed addressing mode ( plusw ) extending the fsr registers to 12 bits , allowing them to linearly address the entire data address space the addition of another fsr register ( bringing the number up to 3 ) the ram space is 12 & nbsp ; bits , addressed using a 4-bit bank select register and an 8-bit offset in each instruction if interrupts are disabled , they may also be used on subroutine call/return by setting the s bit ( appending '' , fast '' to the instruction ) in more advanced pic18 devices , an '' extended mode '' is available which makes the addressing even more favorable to compiled code : a new offset addressing mode ; some addresses which were relative to the access bank are now interpreted relative to the fsr2 register the addition of several new instructions , notable for manipulating the fsr registers although still similar to earlier pic architectures , there are significant enhancements : all registers are 16 bits wide program counter is 22 bits ( bits 22:1 ; bit 0 is always 0 ) instructions are 24 bits wide data address space expanded to 64 & nbsp ; kib first 2 & nbsp ; kib is reserved for peripheral control registers data bank switching is not required unless ram exceeds 62 & nbsp ; kib '' f operand '' direct addressing extended to 13 bits ( 8 & nbsp ; kib ) 16 w registers available for register-register operations ) instructions come in byte and ( 16-bit ) word forms stack is in ram ( with w15 as stack pointer ) ; there is no hardware stack w14 is the frame pointer data stored in rom may be accessed directly ( '' program space visibility '' ) vectored interrupts for different interrupt sources some features are : ( 16×16 ) -bit single-cycle multiplication and other digital signal processing operations hardware multiply–accumulate ( mac ) hardware divide assist ( 19 cycles for 32/16-bit divide ) barrel shifter - for both accumulators and general purpose registers bit reversal hardware support for loop indexing peripheral direct memory access dspics can be programmed in c using microchip 's xc16 compiler ( formerly called c30 ) which is a variant of gcc software can access rom in 16-bit words , where even words hold the least significant 16 bits of each instruction , and odd words hold the most significant 8 bits the first 18 models currently in production ( pic32mx3xx and pic32mx4xx ) are pin to pin compatible and share the same peripherals set with the pic24fxxga0xx family of ( 16-bit ) devices allowing the use of common libraries , software and hardware tools today , starting at 28 pin in small qfn packages up to high performance devices with ethernet , can and usb otg , full family range of mid-range 32-bit microcontrollers are available the pic32 architecture brought a number of new features to microchip portfolio , including : the highest execution speed 80 & nbsp ; mips ( 120+ dhrystone the largest flash memory : 512 & nbsp ; kb one instruction per clock cycle execution the first cached processor allows execution from ram full speed host/dual role and otg usb capabilities full jtag and 2-wire programming and debugging real-time trace the pic32mz series include : 252 mhz core speed , 415 dmips up to 2 & nbsp ; mb flash and 512kb ram new peripherals including high-speed usb , crypto engine and sqi in 2015 , microchip released the pic32mz ef family , using the updated mips m5150 warrior m-class processor a small number of fixed-length instructions most instructions are single-cycle ( 2 clock cycles , or 4 clock cycles in 8-bit models ) , with one delay cycle on branches and skips one accumulator ( w0 ) , the use of which ( as source operand ) is implied ( i.e a hardware stack for storing return addresses a small amount of addressable data space ( 32 , 128 , or 256 bytes , depending on the family ) , extended through banking data-space mapped cpu , port , and peripheral registers alu status flags are mapped into the data space the program counter is also mapped into the data space and writable ( this is used to implement indirect jumps ) there is no distinction between memory space and register space because the ram serves the job of both memory and registers , and the ram is usually just referred to as the register file or simply as the registers the addressability of memory varies depending on device series , and all pic devices have some bank switching to extend addressing to additional memory a register number is written to the fsr , after which reads from or writes to indf will actually be from or to the register pointed to by fsr for example , pics in the baseline ( pic12 ) and mid-range ( pic16 ) families have program memory addressable in the same wordsize as the instruction width , i.e in contrast , in the pic18 series , the program memory is addressed in 8-bit increments ( bytes ) , which differs from the instruction width of 16 bits in order to be clear , the program memory capacity is usually stated in number of ( single-word ) instructions , rather than in bytes the instruction set includes instructions to perform a variety of operations on registers directly , the accumulator and a literal constant or the accumulator and a register , as well as for conditional execution , and program branching some operations , such as bit setting and testing , can be performed on any numbered register , but bi-operand arithmetic operations always involve w ( the accumulator ) , writing the result back to either w or the other operand register for example , a branch instruction 's target may be indexed by w , and execute a '' retlw '' , which does as it is named return with literal in w small instruction set to learn risc architecture built-in oscillator with selectable speeds easy entry level , in-circuit programming plus in-circuit debugging pickit units available for less than 50 inexpensive microcontrollers wide range of interfaces including i²c , spi , usb , usart , a/d , programmable comparators , pwm , lin , can , psp , and ethernet availability of processors in dil package make them easy to handle for hobby use one accumulator register-bank switching is required to access the entire ram of many devices operations and registers are not orthogonal ; some instructions can address ram and/or immediate constants , while others can use the accumulator only the following stack limitations have been addressed in the pic18 series , but still apply to earlier cores : the hardware call stack is not addressable , so preemptive task switching can not be implemented software-implemented stacks are not efficient , so it is difficult to generate reentrant code and support local variables with paged program memory , there are two page sizes to worry about : one for call and goto and another for computed goto ( typically used for table lookups ) while several commercial compilers are available , in 2008 , microchip released their own c compilers , c18 and c30 , for the line of 18f 24f and 30/33f processors it has macro instructions like mov b , a ( move the data from address a to address b ) and add b , a ( add data from address a to data in address b ) it also hides the skip instructions by providing three-operand branch macro instructions , such as cjne a , b , dest ( compare a with b and jump to dest if they are not equal ) pic devices generally feature : flash memory ( program memory , programmed using mplab devices ) sram ( data memory ) eeprom memory ( programmable at run-time ) sleep mode ( power savings ) watchdog timer various crystal or rc oscillator configurations , or an external clock within a series , there are still many device variants depending on what hardware resources the chip features : gpio internal clock oscillators 8/16/32 & nbsp ; bit timers synchronous/asynchronous serial interface usart mssp peripheral for i²c and spi communications capture/compare and pwm modules analog-to-digital converters ( up to ~1.0 msps ) usb , ethernet , can interfacing support external memory interface integrated analog rf front ends ( pic16f639 , and rfpic ) the proteus design suite is able to simulate many of the popular 8 and 16-bit pic devices along with other circuitry that is connected to the pic on the schematic most pics that microchip currently sells feature icsp ( in circuit serial programming ) and/or lvp ( low voltage programming ) capabilities , allowing the pic to be programmed while it is sitting in the target circuit mplab icd4 and mplab real ice are the current programmers and debuggers for professional engineering , while pickit 3 is a low-cost programmer / debugger line for hobbyists and students many of the higher end flash based pics can also self-program ( write to their own program memory ) , a process known as bootloading demo boards are available with a small bootloader factory programmed that can be used to load user programs over an interface such as rs-232 or usb , thus obviating the need for a programmer device after programming the bootloader onto the pic , the user can then reprogram the device using rs232 or usb , in conjunction with specialized computer software the advantages of a bootloader over icsp is faster programming speeds , immediate program execution following programming , and the ability to both debug and program using the same cable there are many programmers for pic microcontrollers , ranging from the extremely simple designs which rely on icsp to allow direct download of code from a host computer , to intelligent programmers that can verify the device at several supply voltages many of these complex programmers use a pre-programmed pic themselves to send the programming commands to the pic that is to be programmed some are simple designs which require a pc to do the low-level programming signalling ( these typically connect to the serial or parallel port and consist of a few simple components ) , while others have the programming logic built into them ( these typically use a serial or usb connection , are usually faster , and are often built using pics themselves for control ) all newer pic devices feature an icd ( in-circuit debugging ) interface , built into the cpu core , that allows for interactive debugging of the program in conjunction with mplab ide this debugging system comes at a price however , namely limited breakpoint count ( 1 on older devices , 3 on newer devices ) , loss of some i/o ( with the exception of some surface mount 44-pin pics which have dedicated lines for debugging ) and loss of some on-chip features microchip offers three full in-circuit emulators : the mplab devices ( parallel interface , a usb converter is available ) ; the newer mplab devices ( usb 2.0 connection ) ; and most recently , the real ice ( usb 2.0 connection ) designed to be architecturally similar to the pic microcontrollers used in the original versions of the basic stamp , sx microcontrollers replaced the pic in several subsequent versions of that product hardware interfaces in the various parts include usb , can , i2c , spi , as well as a/d and d/a converters holtek make a large number of very cheap microcontrollers ( as low as 8.5 cents in quantity ) with a 14-bit instruction set strikingly similar to the pic16 