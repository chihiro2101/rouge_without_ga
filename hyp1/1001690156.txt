the computational complexity for this class of problems is estimated by : the time and space required to construct the data structure to be searched in the time and space to modify the searched data structure after an incremental change in the search space the time ( and sometimes an extra space ) to answer a query if the search space is fixed , the computational complexity for this class of problems is usually estimated by : the time and space required to construct the data structure to be searched in the time ( and sometimes an extra space ) to answer queries the primary goal of research in combinatorial computational geometry is to develop efficient algorithms and data structures for solving problems stated in terms of basic geometrical objects : points , line segments , polygons , polyhedra , etc polygon triangulation : given a polygon , partition its interior into triangles mesh generation boolean operations on polygons the computational complexity for this class of problems is estimated by the time and space ( computer memory ) required to solve a given problem instance finally , in the previously mentioned example of computer graphics , in cad applications the changing input data are often stored in dynamic data structures , which may be exploited to speed-up the point-in-polygon queries in geometric query problems , commonly known as geometric search problems , the input consists of two parts : the search space part and the query part , which varies over the problem instances for example , the input polygon may represent a border of a country and a point is a position of an aircraft , and the problem is to determine whether the aircraft violated the border for example , in many applications of computer graphics a common problem is to find which area on the screen is clicked by a pointer one could compute the distances between all the pairs of points , of which there are n ( n-1 ) /2 , then pick the pair with the smallest distance in some contexts of query problems there are reasonable expectations on the sequence of the queries , which may be exploited either for efficient data structures or for tighter computational complexity estimates for example , in some cases it is important to know the worst case for the total time for the whole sequence of n queries , rather than for a single query 