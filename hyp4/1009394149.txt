some languages are designed to support one paradigm ( smalltalk supports object-oriented programming , haskell supports functional programming ) , while other programming languages support multiple paradigms ( such as object pascal , c++ , java , javascript , c , scala , visual basic , common lisp , scheme , perl , php , python , ruby , wolfram language , oz , and f ) in these languages , the computer is told what the problem is , not how to solve the problem the program is structured as a set of properties to find in the expected result , not as a procedure to follow the lowest-level programming paradigms are machine code , which directly represents the instructions ( the contents of program memory ) as a sequence of numbers , and assembly language where the machine instructions are represented by mnemonics and memory addresses can be given symbolic labels literate programming , as a form of imperative programming , structures programs as a human-centered web , as in a hypertext essay : documentation is integral to the program , and the program is structured following the logic of prose exposition , rather than compiler convenience facts about the problem domain are expressed as logic formulas , and programs are executed by applying inference rules over them until an answer to the problem is found , or the set of formulas is proved inconsistent with perfect encapsulation , one of the distinguishing features of oop , the only way that another object or user would be able to access the data is via the object 's methods such parallel programming models can be classified according to abstractions that reflect the hardware , such as shared memory , distributed memory with message passing , notions of place visible in the code , and so forth that is , they describe , step by step , exactly the procedure that should , according to the particular programmer at least , be followed to solve a specific problem most programming languages support more than one programming paradigm to allow programmers to use the most suitable programming style and associated language constructs for a given job . in the 1960s , assembly languages were developed to support library copy and quite sophisticated conditional macro generation and preprocessing abilities , call to ( subroutines ) , external variables and common sections ( globals ) , enabling significant code re-use and isolation from hardware specifics via the use of logical operators such as read/write/get/put for example , programs written in c++ , object pascal or php can be purely procedural , purely object-oriented , or can contain elements of both or other paradigms following the widespread use of procedural languages , object-oriented programming ( oop ) languages were created , such as simula , smalltalk , c++ , c , eiffel , php , and java because object-oriented programming is considered a paradigm , not a language , it is possible to create even an object-oriented assembler language 