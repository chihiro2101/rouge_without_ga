rather than dealing with registers , memory addresses , and call stacks , high-level languages deal with variables , arrays , objects , complex arithmetic or boolean expressions , subroutines and functions , loops , threads , locks , and other abstract computer science concepts , with a focus on usability over optimal program efficiency similarly , java shows the difficulty of trying to apply these labels to languages , rather than to implementations ; java is compiled to bytecode which is then executed by either interpreting ( in a java virtual machine ( jvm ) ) or compiling ( typically with a just-in-time compiler such as hotspot , again in a jvm ) some decades ago , the c language , and similar languages , were most often considered '' high-level '' , as it supported concepts such as expression evaluation , parameterised recursive functions , and data types and structures , while assembly language was considered '' low-level '' however , with the growing complexity of modern microprocessor architectures , well-designed compilers for high-level languages frequently produce code comparable in efficiency to what most low-level programmers can produce by hand , and the higher abstraction may allow for more powerful techniques providing better overall results than their low-level counterparts in particular settings assembly language may itself be regarded as a higher level ( but often still one-to-one if used without macros ) representation of machine code , as it supports concepts such as constants and ( limited ) expressions , sometimes even variables , procedures , and data structures there are three general modes of execution for modern high-level languages : ; interpreted : when code written in a language is interpreted , its syntax is read and then executed directly , with no compilation stage an example of this is scala which maintains backward compatibility with java which means that programs and libraries written in java will continue to be usable even if a programming shop switches to scala ; this makes the transition easier and the lifespan of such high-level coding indefinite in many cases , critical portions of a program mostly in a high-level language can be hand-coded in assembly language , leading to a much faster , more efficient , or simply reliably functioning optimised program for this reason , code which needs to run particularly quickly and efficiently may require the use of a lower-level language , even if a higher-level language would make the coding easier alternatively , it is possible for a high-level language to be directly implemented by a computer â€“ the computer directly executes the hll code 